<?php

namespace app\models\forms;

use app\components\PhoneNumberValidator;
use app\helpers\OrganizationRoles;
use app\models\Organizations;
use app\models\relations\UserOrganization;
use app\models\User;
use yii\db\Expression;

class TeacherForm extends \yii\base\Model
{
    public $id;
    public $fio;
    public $first_name;
    public $last_name;
    public $middle_name;
    public $birth_date;
    public $sex;
    public $username;
    public $iin;
    public $phone;
    public $home_phone;
    public $address;
    public $status = 10;
    public $email;


    public function rules()
    {
        return [
            [['first_name', 'last_name', 'sex', 'username','phone', 'email', 'iin'], 'required'],
            [['first_name', 'last_name', "middle_name", 'username','phone', 'email', 'address', 'iin'], 'string'],
            [['first_name', 'last_name', 'username','phone', 'email', 'address', 'sex', 'birth_date', 'iin', 'home_phone', 'middle_name'], 'safe'],
            [['sex'], 'integer'],
            [['birth_date'], 'date', 'format' => 'php:d.m.Y'],
            [['phone', 'home_phone'], PhoneNumberValidator::class],
        ];
    }

    public function init()
    {
        $this->loadDefaultValues();
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function loadDefaultValues(){
        if ($id = \Yii::$app->request->get('id')){
            $user = \app\models\User::findOne($id);
            $this->fio = $user->fio;
            $this->first_name = $user->first_name;
            $this->middle_name = $user->middle_name;
            $this->last_name = $user->last_name;
            $this->sex = $user->sex;
            $this->birth_date = $user->birth_date;
            $this->phone = $user->phone;
            $this->home_phone = $user->home_phone;
            $this->address = $user->address;
            $this->username = $user->username;
            $this->email = $user->email;
            $this->iin = $user->iin;
            $this->status = $user->status;
            $this->id = $user->id;
        }
    }

    public function save(){
        if (!$this->validate()){
            return  false;
        }
        $transaction = \Yii::$app->db->beginTransaction();
        if ($this->id){
            $model = User::findOne($this->id);
        }else{
            $model = new User();
            $model->setPassword('Aa123456@');
            $model->generateAuthKey();
            $model->generateEmailVerificationToken();
        }
        $model->first_name = $this->first_name;
        $model->last_name = $this->last_name;
        $model->middle_name = $this->middle_name;
        $model->username = $this->username;
        $model->iin = $this->iin;
        $model->sex = $this->sex;
        $model->birth_date = $this->birth_date;
        $model->phone = $this->phone;
        $model->home_phone = $this->home_phone;
        $model->address = $this->address;
        $model->email = $this->email;
        $model->status = $this->status;
        $model->fio = trim($this->last_name.' '.$this->first_name.' '.$this->middle_name);
        if (!$model->save()){
            $transaction->rollBack();
            return false;
        }
        $this->id = $model->id;
        $userOrganization = UserOrganization::find()->where(['related_id' => $model->id, 'target_id' => Organizations::getCurrentOrganizationId(), 'role' => OrganizationRoles::TEACHER])->one();
        if (!$userOrganization){
            $userOrganization =  new UserOrganization();
            $userOrganization->target_id = Organizations::getCurrentOrganizationId();
            $userOrganization->organization_id = Organizations::getCurrentOrganizationId();
            $userOrganization->related_id = $model->id;
            $userOrganization->role = OrganizationRoles::TEACHER;
            if (!$userOrganization->save()){
                $transaction->rollBack();
                return false;
            }
        }
        $transaction->commit();

        return true;
    }
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'iin' => 'ИИН',
            'username' => 'Логин',
            'email' => 'Email',
            'phone' => 'Мобильный телефон',
            'fio' => 'ФИО',
            'contacts' => 'Контакты',
            'parent_contacts' => 'Контакты родителя',
            'home_phone' => 'Телефон',
            'address' => 'Адрес',
            'first_name' => 'Имя',
            'last_name' => 'Фамилия',
            'middle_name' => 'Отчество',
            'sex' => 'Пол',
            'birth_date' => 'Дата рождения',
            'info' => 'Info',
            'status' => 'Статус',
            'balance' => 'На счету ученика',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ]; // TODO: Change the autogenerated stub
    }

}