<?php

namespace app\models\forms;

use app\helpers\OrganizationUrl;
use app\models\Lesson;
use app\models\LessonAttendance;
use app\models\Organizations;
use app\models\Pupil;
use app\models\PupilEducation;
use app\models\relations\EducationGroup;
use app\models\services\PupilService;
use app\models\Tariff;
use Yii;
use yii\base\BaseObject;

class AttendancesForm extends \yii\base\Model
{
    public $pupils;
    public $lessonId;
    public $attendances;
    public $statuses;

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            ['statuses', 'safe']
        ];
    }

    public function __construct($config = [])
    {
        $this->lessonId = Yii::$app->request->get('id');
        parent::__construct($config = []);
    }

    public function init()
    {
        $this->loadDefaultValues();
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function loadDefaultValues(){
        $lesson = Lesson::findOne($this->lessonId);
        $this->pupils = $lesson->getPupils();
        $this->attendances = [];
        foreach ($this->pupils as $pupil){
            $lessonAttendance = LessonAttendance::find()->where(['pupil_id' => $pupil->id, 'lesson_id' => $lesson->id])->byOrganization($lesson->organization_id)->notDeleted()->one();
            if (!$lessonAttendance) {
                $lessonAttendance = new LessonAttendance();
                $lessonAttendance->lesson_id = $lesson->id;
                $lessonAttendance->pupil_id = $pupil->id;
                $lessonAttendance->teacher_id = $lesson->teacher_id;
                $lessonAttendance->save();
            }
            $this->attendances[$pupil->id] = $lessonAttendance;
            $this->statuses[$pupil->id]['status'] = $lessonAttendance->status;
        }
    }

    public function save(){
        if (!$this->validate()){
            return  false;
        }
        $lesson = Lesson::findOne($this->lessonId);
        $transaction = \Yii::$app->db->beginTransaction();
        foreach ($this->statuses as $pupilId => $item){
            $lessonAttendance = LessonAttendance::find()->where(['pupil_id' => $pupilId, 'lesson_id' => $lesson->id])->byOrganization($lesson->organization_id)->notDeleted()->one();
            if (!$lessonAttendance) {
                $lessonAttendance = new LessonAttendance();
                $lessonAttendance->lesson_id = $lesson->id;
                $lessonAttendance->pupil_id = $pupilId;
                $lessonAttendance->teacher_id = $lesson->teacher_id;
            }
            $lessonAttendance->status = $item['status'];
            if (!$lessonAttendance->save()){
                $transaction->rollBack();
                return false;
            }
        }

        $transaction->commit();
        return true;
    }
}